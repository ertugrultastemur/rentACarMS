package com.example.carservice.service;

import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.springframework.stereotype.Service;

import com.example.carservice.dto.CarDto;
import com.example.carservice.dto.CarIdDto;
import com.example.carservice.exception.CarNotFoundException;
import com.example.carservice.model.Car;
import com.example.carservice.repository.CarRepository;

@Service
public class CarService {
	
	private final CarRepository repository;
	
	public CarService(CarRepository repository) {
		this.repository = repository;
	}
	
	public List<CarDto> getAllCars(){
		return repository.findAll()
				.stream()
				.map(carDto -> CarDto.convert(carDto))
				.collect(Collectors.toList())
				;
	}
	
	public CarIdDto findByState(String state) {
		return repository.findCarByState(state)
				.map(car -> new CarIdDto(car.getId(),car.getState()))
				.orElseThrow(() -> new CarNotFoundException("Car could not found by state : " + state));
	}
	
	public CarDto findCarById(int id) {
		return repository.findById(id)
				.map(carDto -> CarDto.convert(carDto)).orElseThrow(() -> new CarNotFoundException("Car could not found by id : " + id));
	}

}
